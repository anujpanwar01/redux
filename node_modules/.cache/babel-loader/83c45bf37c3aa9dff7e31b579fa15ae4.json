{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\redux-sm-project\\\\src\\\\components\\\\Counter.js\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\"; //for class component\n///////////////////////////////////////\n\nimport { useSelector, useDispatch } from \"react-redux\"; //for the functional components\n\nimport classes from \"./Counter.module.css\"; // const Counter = () => {\n//   //useDispatch give us the function baxk\n//   const dispatch = useDispatch();\n//   //take the data or state outside from the redux\n//   const counter = useSelector((state) => state.counter);\n//   const increment = () => {\n//     dispatch({ type: \"increment\" });\n//   };\n//   const decrement = () => {\n//     dispatch({ type: \"decrement\" });\n//   };\n//   const toggleCounterHandler = () => {};\n//   return (\n//     <main className={classes.counter}>\n//       <h1>Redux Counter</h1>\n//       <div className={classes.value}>{counter}</div>\n//       <div>\n//         <button onClick={increment}>increment</button>\n//         <button onClick={decrement}>decrement</button>\n//       </div>\n//       <button onClick={toggleCounterHandler}>Toggle Counter</button>\n//     </main>\n//   );\n// };\n// export { Counter };\n///////////////////////////////////////////////////////////////////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counters extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.increment = () => {\n      this.props.increment();\n    };\n\n    this.decrement = () => {\n      this.props.decrement();\n    };\n  }\n\n  toggleCounterHandler() {}\n\n  render() {\n    const {\n      increment,\n      decrement,\n      toggleCounterHandler\n    } = this;\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.counter,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Redux Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.value,\n        children: this.props.counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: increment,\n          children: \"increment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: decrement,\n          children: \"decrement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleCounterHandler,\n        children: \"Toggle Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n} //get data from the\n\n\nconst mapStateToProps = state => {\n  return {\n    counter: state.counter\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    increment: () => dispatch({\n      type: \"increment\"\n    }),\n    decrement: () => dispatch({\n      type: \"decrement\"\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counters);","map":{"version":3,"sources":["C:/Users/HP/Desktop/redux-sm-project/src/components/Counter.js"],"names":["Component","connect","useSelector","useDispatch","classes","Counters","increment","props","decrement","toggleCounterHandler","render","counter","value","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAAuC;AAEvC;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAAwD;;AACxD,OAAOC,OAAP,MAAoB,sBAApB,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAQ/BM,SAR+B,GAQnB,MAAM;AAChB,WAAKC,KAAL,CAAWD,SAAX;AACD,KAV8B;;AAAA,SAW/BE,SAX+B,GAWnB,MAAM;AAChB,WAAKD,KAAL,CAAWC,SAAX;AACD,KAb8B;AAAA;;AAc/BC,EAAAA,oBAAoB,GAAG,CAAE;;AACzBC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA,SAAF;AAAaE,MAAAA,SAAb;AAAwBC,MAAAA;AAAxB,QAAiD,IAAvD;AACA,wBACE;AAAM,MAAA,SAAS,EAAEL,OAAO,CAACO,OAAzB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAEP,OAAO,CAACQ,KAAxB;AAAA,kBAAgC,KAAKL,KAAL,CAAWI;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAEL,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAEE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAOE;AAAQ,QAAA,OAAO,EAAEC,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA5B8B,C,CA8BjC;;;AACA,MAAMI,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLH,IAAAA,OAAO,EAAEG,KAAK,CAACH;AADV,GAAP;AAGD,CAJD;;AAKA,MAAMI,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLV,IAAAA,SAAS,EAAE,MAAMU,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CADpB;AAELT,IAAAA,SAAS,EAAE,MAAMQ,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD;AAFpB,GAAP;AAID,CALD;;AAMA,eAAehB,OAAO,CAACY,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import { Component } from \"react\";\nimport { connect } from \"react-redux\"; //for class component\n\n///////////////////////////////////////\nimport { useSelector, useDispatch } from \"react-redux\"; //for the functional components\nimport classes from \"./Counter.module.css\";\n\n// const Counter = () => {\n//   //useDispatch give us the function baxk\n//   const dispatch = useDispatch();\n//   //take the data or state outside from the redux\n//   const counter = useSelector((state) => state.counter);\n\n//   const increment = () => {\n//     dispatch({ type: \"increment\" });\n//   };\n//   const decrement = () => {\n//     dispatch({ type: \"decrement\" });\n//   };\n//   const toggleCounterHandler = () => {};\n\n//   return (\n//     <main className={classes.counter}>\n//       <h1>Redux Counter</h1>\n//       <div className={classes.value}>{counter}</div>\n//       <div>\n//         <button onClick={increment}>increment</button>\n//         <button onClick={decrement}>decrement</button>\n//       </div>\n//       <button onClick={toggleCounterHandler}>Toggle Counter</button>\n//     </main>\n//   );\n// };\n\n// export { Counter };\n\n///////////////////////////////////////////////////////////////////////\n\nclass Counters extends Component {\n  /* increment(){\n  this.props.increment();\n  }\n  we use the bind method to set to this\n  ex-: <button onClick={increment.bind(this)}>increment</button>\n*/\n\n  increment = () => {\n    this.props.increment();\n  };\n  decrement = () => {\n    this.props.decrement();\n  };\n  toggleCounterHandler() {}\n  render() {\n    const { increment, decrement, toggleCounterHandler } = this;\n    return (\n      <main className={classes.counter}>\n        <h1>Redux Counter</h1>\n        <div className={classes.value}>{this.props.counter}</div>\n        <div>\n          <button onClick={increment}>increment</button>\n          <button onClick={decrement}>decrement</button>\n        </div>\n        <button onClick={toggleCounterHandler}>Toggle Counter</button>\n      </main>\n    );\n  }\n}\n//get data from the\nconst mapStateToProps = (state) => {\n  return {\n    counter: state.counter,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    increment: () => dispatch({ type: \"increment\" }),\n    decrement: () => dispatch({ type: \"decrement\" }),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Counters);\n"]},"metadata":{},"sourceType":"module"}