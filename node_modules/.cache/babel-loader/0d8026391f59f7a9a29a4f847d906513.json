{"ast":null,"code":"var exec = require('child_process').exec;\n\nexports = module.exports = pidof;\n\nfunction pidof(cmd, callback) {\n  exec('ps -eo pid,comm', function (err, stdout, stderr) {\n    if (err) {\n      callback(err);\n    } else {\n      var pid = pidof.parse(stdout, cmd);\n      callback(null, pid);\n    }\n  });\n}\n\n;\n\npidof.parse = function (data, cmd) {\n  var cmdRe = new RegExp('/' + cmd + '$');\n  var lines = data.trim().split('\\n');\n\n  for (var i = 0, l = lines.length; i < l; i++) {\n    var fields = lines[i].trim().split(/\\s+/, 2);\n\n    if (fields.length !== 2) {\n      continue;\n    }\n\n    if (fields[1] === cmd || fields[1].match(cmdRe)) {\n      return parseInt(fields[0], 10);\n    }\n  }\n\n  return null;\n};","map":{"version":3,"sources":["C:/Users/HP/node_modules/pidof/lib/pidof.js"],"names":["exec","require","exports","module","pidof","cmd","callback","err","stdout","stderr","pid","parse","data","cmdRe","RegExp","lines","trim","split","i","l","length","fields","match","parseInt"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,eAAD,CAAP,CAAyBD,IAApC;;AAEAE,OAAO,GAAGC,MAAM,CAACD,OAAP,GAAiBE,KAA3B;;AAEA,SAASA,KAAT,CAAeC,GAAf,EAAoBC,QAApB,EAA8B;AAC1BN,EAAAA,IAAI,CAAC,iBAAD,EAAoB,UAAUO,GAAV,EAAeC,MAAf,EAAuBC,MAAvB,EAA+B;AACnD,QAAIF,GAAJ,EAAS;AACLD,MAAAA,QAAQ,CAACC,GAAD,CAAR;AACH,KAFD,MAEO;AACH,UAAIG,GAAG,GAAGN,KAAK,CAACO,KAAN,CAAYH,MAAZ,EAAoBH,GAApB,CAAV;AACAC,MAAAA,QAAQ,CAAC,IAAD,EAAOI,GAAP,CAAR;AACH;AACJ,GAPG,CAAJ;AAQH;;AAAA;;AAEDN,KAAK,CAACO,KAAN,GAAc,UAAUC,IAAV,EAAgBP,GAAhB,EAAqB;AAC/B,MAAIQ,KAAK,GAAG,IAAIC,MAAJ,CAAW,MAAMT,GAAN,GAAY,GAAvB,CAAZ;AACA,MAAIU,KAAK,GAAGH,IAAI,CAACI,IAAL,GAAYC,KAAZ,CAAkB,IAAlB,CAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGJ,KAAK,CAACK,MAA1B,EAAkCF,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1C,QAAIG,MAAM,GAAGN,KAAK,CAACG,CAAD,CAAL,CAASF,IAAT,GAAgBC,KAAhB,CAAsB,KAAtB,EAA6B,CAA7B,CAAb;;AAEA,QAAII,MAAM,CAACD,MAAP,KAAkB,CAAtB,EAAyB;AACrB;AACH;;AAED,QAAIC,MAAM,CAAC,CAAD,CAAN,KAAchB,GAAd,IAAqBgB,MAAM,CAAC,CAAD,CAAN,CAAUC,KAAV,CAAgBT,KAAhB,CAAzB,EAAiD;AAC7C,aAAOU,QAAQ,CAACF,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAf;AACH;AACJ;;AAED,SAAO,IAAP;AACH,CAhBD","sourcesContent":["var exec = require('child_process').exec;\n\nexports = module.exports = pidof;\n\nfunction pidof(cmd, callback) {\n    exec('ps -eo pid,comm', function (err, stdout, stderr) {\n        if (err) {\n            callback(err);\n        } else {\n            var pid = pidof.parse(stdout, cmd);\n            callback(null, pid);\n        }\n    });\n};\n\npidof.parse = function (data, cmd) {\n    var cmdRe = new RegExp('/' + cmd + '$');\n    var lines = data.trim().split('\\n');\n    for (var i = 0, l = lines.length; i < l; i++) {\n        var fields = lines[i].trim().split(/\\s+/, 2);\n\n        if (fields.length !== 2) {\n            continue;\n        }\n\n        if (fields[1] === cmd || fields[1].match(cmdRe)) {\n            return parseInt(fields[0], 10);\n        }\n    }\n\n    return null;\n};\n"]},"metadata":{},"sourceType":"script"}