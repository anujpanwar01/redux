{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\redux-sm-project\\\\src\\\\components\\\\Counter.js\",\n    _s = $RefreshSig$();\n\n// import { Component } from \"react\";\n// import { connect } from \"react-redux\"; //for class component\n///////////////////////////////////////\nimport { useSelector, useDispatch } from \"react-redux\"; //for the functional components\n\nimport classes from \"./Counter.module.css\";\nimport { counterActions } from \"./store/root-reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  //useDispatch give us the function baxk\n  const dispatch = useDispatch(); //take the data or state outside from the redux\n\n  const counter = useSelector(state => state.counter);\n  const show = useSelector(state => state.showCounter);\n\n  const increment = () => {\n    dispatch(counterActions.increment());\n  };\n\n  const increase = () => {\n    dispatch(counterActions.increase(5));\n\n    const decrement = () => {\n      dispatch(counterActions.decrement());\n    };\n\n    const toggleCounterHandler = () => {\n      dispatch(counterActions.toggle());\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.counter,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Redux Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), show ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.value,\n        children: counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: increment,\n          children: \"increment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: increase,\n          children: \"increment by 5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: decrement,\n          children: \"decrement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleCounterHandler,\n        children: \"Toggle Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }; ///////////////////////////////////////////////////////////////////////\n\n  /*\n  class Counters extends Component {\n  /* increment(){\n  this.props.increment();\n  }\n  we use the bind method to set to this\n  ex-: <button onClick={increment.bind(this)}>increment</button>\n    increment = () => {\n    this.props.increment();\n  };\n  decrement = () => {\n    this.props.decrement();\n  };\n  toggleCounterHandler() {}\n  render() {\n    const { increment, decrement, toggleCounterHandler } = this;\n    return (\n      <main className={classes.counter}>\n        <h1>Redux Counter</h1>\n        <div className={classes.value}>{this.props.counter}</div>\n        <div>\n          <button onClick={increment}>increment</button>\n          <button onClick={decrement}>decrement</button>\n        </div>\n        <button onClick={toggleCounterHandler}>Toggle Counter</button>\n      </main>\n    );\n  }\n  }\n  //get data from the\n  const mapStateToProps = (state) => {\n  return {\n    counter: state.counter,\n  };\n  };\n  const mapDispatchToProps = (dispatch) => {\n  return {\n    increment: () => dispatch({ type: \"increment\" }),\n    decrement: () => dispatch({ type: \"decrement\" }),\n  };\n  };\n  export default connect(mapStateToProps, mapDispatchToProps)(Counters);\n  */\n\n};\n\n_s(Counter, \"a6W6bcAuHVADZPU2xn93xNQZltc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/redux-sm-project/src/components/Counter.js"],"names":["useSelector","useDispatch","classes","counterActions","Counter","dispatch","counter","state","show","showCounter","increment","increase","decrement","toggleCounterHandler","toggle","value"],"mappings":";;;AAAA;AACA;AAEA;AACA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAAwD;;AACxD,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,cAAT,QAA+B,sBAA/B;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B,CAFoB,CAGpB;;AACA,QAAMK,OAAO,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,OAAlB,CAA3B;AACA,QAAME,IAAI,GAAGR,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACE,WAAlB,CAAxB;;AAEA,QAAMC,SAAS,GAAG,MAAM;AACtBL,IAAAA,QAAQ,CAACF,cAAc,CAACO,SAAf,EAAD,CAAR;AACD,GAFD;;AAGA,QAAMC,QAAQ,GAAG,MAAM;AACrBN,IAAAA,QAAQ,CAACF,cAAc,CAACQ,QAAf,CAAwB,CAAxB,CAAD,CAAR;;AACA,UAAMC,SAAS,GAAG,MAAM;AACtBP,MAAAA,QAAQ,CAACF,cAAc,CAACS,SAAf,EAAD,CAAR;AACD,KAFD;;AAGA,UAAMC,oBAAoB,GAAG,MAAM;AACjCR,MAAAA,QAAQ,CAACF,cAAc,CAACW,MAAf,EAAD,CAAR;AACD,KAFD;;AAIA,wBACE;AAAM,MAAA,SAAS,EAAEZ,OAAO,CAACI,OAAzB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGE,IAAI,gBAAG;AAAK,QAAA,SAAS,EAAEN,OAAO,CAACa,KAAxB;AAAA,kBAAgCT;AAAhC;AAAA;AAAA;AAAA;AAAA,cAAH,GAAoD,IAF3D,eAGE;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAEI,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAEC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,OAAO,EAAEC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAQE;AAAQ,QAAA,OAAO,EAAEC,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD,GArBD,CAVoB,CAiCpB;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGC,CA/ED;;GAAMT,O;UAEaH,W,EAEDD,W,EACHA,W;;;KALTI,O;AAgFN,eAAeA,OAAf","sourcesContent":["// import { Component } from \"react\";\n// import { connect } from \"react-redux\"; //for class component\n\n///////////////////////////////////////\nimport { useSelector, useDispatch } from \"react-redux\"; //for the functional components\nimport classes from \"./Counter.module.css\";\nimport { counterActions } from \"./store/root-reducer\";\n\nconst Counter = () => {\n  //useDispatch give us the function baxk\n  const dispatch = useDispatch();\n  //take the data or state outside from the redux\n  const counter = useSelector((state) => state.counter);\n  const show = useSelector((state) => state.showCounter);\n\n  const increment = () => {\n    dispatch(counterActions.increment());\n  };\n  const increase = () => {\n    dispatch(counterActions.increase(5));\n    const decrement = () => {\n      dispatch(counterActions.decrement());\n    };\n    const toggleCounterHandler = () => {\n      dispatch(counterActions.toggle());\n    };\n\n    return (\n      <main className={classes.counter}>\n        <h1>Redux Counter</h1>\n        {show ? <div className={classes.value}>{counter}</div> : null}\n        <div>\n          <button onClick={increment}>increment</button>\n          <button onClick={increase}>increment by 5</button>\n          <button onClick={decrement}>decrement</button>\n        </div>\n        <button onClick={toggleCounterHandler}>Toggle Counter</button>\n      </main>\n    );\n  };\n\n  ///////////////////////////////////////////////////////////////////////\n  /*\nclass Counters extends Component {\n  /* increment(){\n  this.props.increment();\n  }\n  we use the bind method to set to this\n  ex-: <button onClick={increment.bind(this)}>increment</button>\n\n\n  increment = () => {\n    this.props.increment();\n  };\n  decrement = () => {\n    this.props.decrement();\n  };\n  toggleCounterHandler() {}\n  render() {\n    const { increment, decrement, toggleCounterHandler } = this;\n    return (\n      <main className={classes.counter}>\n        <h1>Redux Counter</h1>\n        <div className={classes.value}>{this.props.counter}</div>\n        <div>\n          <button onClick={increment}>increment</button>\n          <button onClick={decrement}>decrement</button>\n        </div>\n        <button onClick={toggleCounterHandler}>Toggle Counter</button>\n      </main>\n    );\n  }\n}\n//get data from the\nconst mapStateToProps = (state) => {\n  return {\n    counter: state.counter,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    increment: () => dispatch({ type: \"increment\" }),\n    decrement: () => dispatch({ type: \"decrement\" }),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Counters);\n*/\n};\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}