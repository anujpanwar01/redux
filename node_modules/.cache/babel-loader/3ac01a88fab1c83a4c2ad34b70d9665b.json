{"ast":null,"code":"import { Component } from \"react\";\nimport { connect } from \"react-redux\"; //for class component\n///////////////////////////////////////\n\nimport { useSelector, useDispatch } from \"react-redux\"; //for the functional components\n\nimport classes from \"./Counter.module.css\"; // const Counter = () => {\n//   //useDispatch give us the function baxk\n//   const dispatch = useDispatch();\n//   //take the data or state outside from the redux\n//   const counter = useSelector((state) => state.counter);\n//   const increment = () => {\n//     dispatch({ type: \"increment\" });\n//   };\n//   const decrement = () => {\n//     dispatch({ type: \"decrement\" });\n//   };\n//   const toggleCounterHandler = () => {};\n//   return (\n//     <main className={classes.counter}>\n//       <h1>Redux Counter</h1>\n//       <div className={classes.value}>{counter}</div>\n//       <div>\n//         <button onClick={increment}>increment</button>\n//         <button onClick={decrement}>decrement</button>\n//       </div>\n//       <button onClick={toggleCounterHandler}>Toggle Counter</button>\n//     </main>\n//   );\n// };\n// export { Counter };\n///////////////////////////////////////////////////////////////////////\n\n/*\nclass Counters extends Component {\n  /* increment(){\n  this.props.increment();\n  }\n  we use the bind method to set to this\n  ex-: <button onClick={increment.bind(this)}>increment</button>\n\n\n  increment = () => {\n    this.props.increment();\n  };\n  decrement = () => {\n    this.props.decrement();\n  };\n  toggleCounterHandler() {}\n  render() {\n    const { increment, decrement, toggleCounterHandler } = this;\n    return (\n      <main className={classes.counter}>\n        <h1>Redux Counter</h1>\n        <div className={classes.value}>{this.props.counter}</div>\n        <div>\n          <button onClick={increment}>increment</button>\n          <button onClick={decrement}>decrement</button>\n        </div>\n        <button onClick={toggleCounterHandler}>Toggle Counter</button>\n      </main>\n    );\n  }\n}\n//get data from the\nconst mapStateToProps = (state) => {\n  return {\n    counter: state.counter,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    increment: () => dispatch({ type: \"increment\" }),\n    decrement: () => dispatch({ type: \"decrement\" }),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Counters);\n*/","map":{"version":3,"sources":["C:/Users/HP/Desktop/redux-sm-project/src/components/Counter.js"],"names":["Component","connect","useSelector","useDispatch","classes"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAAuC;AAEvC;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAAwD;;AACxD,OAAOC,OAAP,MAAoB,sBAApB,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { Component } from \"react\";\nimport { connect } from \"react-redux\"; //for class component\n\n///////////////////////////////////////\nimport { useSelector, useDispatch } from \"react-redux\"; //for the functional components\nimport classes from \"./Counter.module.css\";\n\n// const Counter = () => {\n//   //useDispatch give us the function baxk\n//   const dispatch = useDispatch();\n//   //take the data or state outside from the redux\n//   const counter = useSelector((state) => state.counter);\n\n//   const increment = () => {\n//     dispatch({ type: \"increment\" });\n//   };\n//   const decrement = () => {\n//     dispatch({ type: \"decrement\" });\n//   };\n//   const toggleCounterHandler = () => {};\n\n//   return (\n//     <main className={classes.counter}>\n//       <h1>Redux Counter</h1>\n//       <div className={classes.value}>{counter}</div>\n//       <div>\n//         <button onClick={increment}>increment</button>\n//         <button onClick={decrement}>decrement</button>\n//       </div>\n//       <button onClick={toggleCounterHandler}>Toggle Counter</button>\n//     </main>\n//   );\n// };\n\n// export { Counter };\n\n///////////////////////////////////////////////////////////////////////\n/*\nclass Counters extends Component {\n  /* increment(){\n  this.props.increment();\n  }\n  we use the bind method to set to this\n  ex-: <button onClick={increment.bind(this)}>increment</button>\n\n\n  increment = () => {\n    this.props.increment();\n  };\n  decrement = () => {\n    this.props.decrement();\n  };\n  toggleCounterHandler() {}\n  render() {\n    const { increment, decrement, toggleCounterHandler } = this;\n    return (\n      <main className={classes.counter}>\n        <h1>Redux Counter</h1>\n        <div className={classes.value}>{this.props.counter}</div>\n        <div>\n          <button onClick={increment}>increment</button>\n          <button onClick={decrement}>decrement</button>\n        </div>\n        <button onClick={toggleCounterHandler}>Toggle Counter</button>\n      </main>\n    );\n  }\n}\n//get data from the\nconst mapStateToProps = (state) => {\n  return {\n    counter: state.counter,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    increment: () => dispatch({ type: \"increment\" }),\n    decrement: () => dispatch({ type: \"decrement\" }),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Counters);\n*/\n"]},"metadata":{},"sourceType":"module"}