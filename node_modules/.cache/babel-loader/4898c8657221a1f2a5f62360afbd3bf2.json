{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\redux-sm-project\\\\src\\\\components\\\\Counter.js\",\n    _s = $RefreshSig$();\n\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\"; //for class component\n///////////////////////////////////////\n\nimport { useSelector, useDispatch } from \"react-redux\"; //for the functional components\n\nimport classes from \"./Counter.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  //useDispatch give us the function baxk\n  const dispatch = useDispatch(); //take the data or state outside from the redux\n\n  const counter = useSelector(state => state.counter);\n  const showCounter = useSelector(state => state.showCounter);\n\n  const increment = () => {\n    dispatch({\n      type: \"increment\"\n    });\n  };\n\n  const increase = () => {\n    dispatch({\n      type: \"increase\",\n      amout: 5\n    });\n  };\n\n  const decrement = () => {\n    dispatch({\n      type: \"decrement\"\n    });\n  };\n\n  const toggleCounterHandler = () => {\n    dispatch({\n      type: \"toogle\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), \"( showCounter &&\", \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), \")\", \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increment,\n        children: \"increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increase,\n        children: \"increment by 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrement,\n        children: \"decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"K8sD1S6QxuN5wk6p12Sa6g8roDA=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Counter;\nexport default Counter; ///////////////////////////////////////////////////////////////////////\n\n/*\nclass Counters extends Component {\n  /* increment(){\n  this.props.increment();\n  }\n  we use the bind method to set to this\n  ex-: <button onClick={increment.bind(this)}>increment</button>\n\n\n  increment = () => {\n    this.props.increment();\n  };\n  decrement = () => {\n    this.props.decrement();\n  };\n  toggleCounterHandler() {}\n  render() {\n    const { increment, decrement, toggleCounterHandler } = this;\n    return (\n      <main className={classes.counter}>\n        <h1>Redux Counter</h1>\n        <div className={classes.value}>{this.props.counter}</div>\n        <div>\n          <button onClick={increment}>increment</button>\n          <button onClick={decrement}>decrement</button>\n        </div>\n        <button onClick={toggleCounterHandler}>Toggle Counter</button>\n      </main>\n    );\n  }\n}\n//get data from the\nconst mapStateToProps = (state) => {\n  return {\n    counter: state.counter,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    increment: () => dispatch({ type: \"increment\" }),\n    decrement: () => dispatch({ type: \"decrement\" }),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Counters);\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/redux-sm-project/src/components/Counter.js"],"names":["Component","connect","useSelector","useDispatch","classes","Counter","dispatch","counter","state","showCounter","increment","type","increase","amout","decrement","toggleCounterHandler","value"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAAuC;AAEvC;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAAwD;;AACxD,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB;AACA,QAAMC,QAAQ,GAAGH,WAAW,EAA5B,CAFoB,CAGpB;;AACA,QAAMI,OAAO,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,OAAlB,CAA3B;AACA,QAAME,WAAW,GAAGP,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,WAAlB,CAA/B;;AAEA,QAAMC,SAAS,GAAG,MAAM;AACtBJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD,GAFD;;AAGA,QAAMC,QAAQ,GAAG,MAAM;AACrBN,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,UAAR;AAAoBE,MAAAA,KAAK,EAAE;AAA3B,KAAD,CAAR;AACD,GAFD;;AAGA,QAAMC,SAAS,GAAG,MAAM;AACtBR,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD,GAFD;;AAGA,QAAMI,oBAAoB,GAAG,MAAM;AACjCT,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAM,IAAA,SAAS,EAAEP,OAAO,CAACG,OAAzB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,sBACyC,GADzC,eAEE;AAAK,MAAA,SAAS,EAAEH,OAAO,CAACY,KAAxB;AAAA,gBAAgCT;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFF,OAEkD,GAFlD,eAGE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEE,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAEE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE;AAAQ,MAAA,OAAO,EAAEC,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAhCD;;GAAMV,O;UAEaF,W,EAEDD,W,EACIA,W;;;KALhBG,O;AAkCN,eAAeA,OAAf,C,CAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { Component } from \"react\";\nimport { connect } from \"react-redux\"; //for class component\n\n///////////////////////////////////////\nimport { useSelector, useDispatch } from \"react-redux\"; //for the functional components\nimport classes from \"./Counter.module.css\";\n\nconst Counter = () => {\n  //useDispatch give us the function baxk\n  const dispatch = useDispatch();\n  //take the data or state outside from the redux\n  const counter = useSelector((state) => state.counter);\n  const showCounter = useSelector((state) => state.showCounter);\n\n  const increment = () => {\n    dispatch({ type: \"increment\" });\n  };\n  const increase = () => {\n    dispatch({ type: \"increase\", amout: 5 });\n  };\n  const decrement = () => {\n    dispatch({ type: \"decrement\" });\n  };\n  const toggleCounterHandler = () => {\n    dispatch({ type: \"toogle\" });\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>( showCounter &&{\" \"}\n      <div className={classes.value}>{counter}</div>){\" \"}\n      <div>\n        <button onClick={increment}>increment</button>\n        <button onClick={increase}>increment by 5</button>\n        <button onClick={decrement}>decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n\n///////////////////////////////////////////////////////////////////////\n/*\nclass Counters extends Component {\n  /* increment(){\n  this.props.increment();\n  }\n  we use the bind method to set to this\n  ex-: <button onClick={increment.bind(this)}>increment</button>\n\n\n  increment = () => {\n    this.props.increment();\n  };\n  decrement = () => {\n    this.props.decrement();\n  };\n  toggleCounterHandler() {}\n  render() {\n    const { increment, decrement, toggleCounterHandler } = this;\n    return (\n      <main className={classes.counter}>\n        <h1>Redux Counter</h1>\n        <div className={classes.value}>{this.props.counter}</div>\n        <div>\n          <button onClick={increment}>increment</button>\n          <button onClick={decrement}>decrement</button>\n        </div>\n        <button onClick={toggleCounterHandler}>Toggle Counter</button>\n      </main>\n    );\n  }\n}\n//get data from the\nconst mapStateToProps = (state) => {\n  return {\n    counter: state.counter,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    increment: () => dispatch({ type: \"increment\" }),\n    decrement: () => dispatch({ type: \"decrement\" }),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Counters);\n*/\n"]},"metadata":{},"sourceType":"module"}