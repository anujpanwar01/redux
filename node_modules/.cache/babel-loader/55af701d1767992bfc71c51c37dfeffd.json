{"ast":null,"code":"//initial State\nimport { createSlice } from \"@reduxjs/toolkit\"; //alternate of reducer function\n\nconst initial = {\n  counter: 0,\n  showCounter: true\n};\nexport const counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initial,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\n/*\r\nconst reducer = (state = initial, action) => {\r\n  switch (action.type) {\r\n    case \"increment\":\r\n      return {\r\n        ...state,\r\n        counter: state.counter + 1,\r\n      };\r\n    case \"increase\":\r\n      return {\r\n        ...state,\r\n\r\n        counter: state.counter + action.amout,\r\n      };\r\n\r\n    case \"toggle\":\r\n      return {\r\n        ...state,\r\n\r\n        showCounter: !state.showCounter,\r\n      };\r\n\r\n    case \"decrement\":\r\n      return {\r\n        ...state,\r\n\r\n        counter: state.counter - 1,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n*/","map":{"version":3,"sources":["C:/Users/HP/Desktop/redux-sm-project/src/components/store/reducer.js"],"names":["createSlice","initial","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggle"],"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,kBAA5B,C,CAEA;;AACA,MAAMC,OAAO,GAAG;AACdC,EAAAA,OAAO,EAAE,CADK;AAEdC,EAAAA,WAAW,EAAE;AAFC,CAAhB;AAIA,OAAO,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AACtCK,EAAAA,IAAI,EAAE,SADgC;AAEtCC,EAAAA,YAAY,EAAEL,OAFwB;AAGtCM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACP,OAAN;AACD,KAHO;;AAIRQ,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACP,OAAN;AACD,KANO;;AAORS,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACtBH,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACC,OAAvC;AACD,KATO;;AAURC,IAAAA,MAAM,CAACL,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;AACD;;AAZO;AAH4B,CAAD,CAAhC;AAkBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["//initial State\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n//alternate of reducer function\r\nconst initial = {\r\n  counter: 0,\r\n  showCounter: true,\r\n};\r\nexport const counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: initial,\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.payload;\r\n    },\r\n    toggle(state) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n/*\r\nconst reducer = (state = initial, action) => {\r\n  switch (action.type) {\r\n    case \"increment\":\r\n      return {\r\n        ...state,\r\n        counter: state.counter + 1,\r\n      };\r\n    case \"increase\":\r\n      return {\r\n        ...state,\r\n\r\n        counter: state.counter + action.amout,\r\n      };\r\n\r\n    case \"toggle\":\r\n      return {\r\n        ...state,\r\n\r\n        showCounter: !state.showCounter,\r\n      };\r\n\r\n    case \"decrement\":\r\n      return {\r\n        ...state,\r\n\r\n        counter: state.counter - 1,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}