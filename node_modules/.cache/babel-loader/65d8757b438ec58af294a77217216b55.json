{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\redux-sm-project\\\\src\\\\components\\\\Counter.js\",\n    _s = $RefreshSig$();\n\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\"; //for class component\n///////////////////////////////////////\n\nimport { useSelector, useDispatch } from \"react-redux\"; //for the functional components\n\nimport classes from \"./Counter.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  //useDispatch give us the function baxk\n  const dispatch = useDispatch(); //take the data or state outside from the redux\n\n  const counter = useSelector(state => state.counter);\n\n  const increment = () => {\n    dispatch({\n      type: \"increment\"\n    });\n  };\n\n  const decrement = () => {\n    dispatch({\n      type: \"decrement\"\n    });\n  };\n\n  const toggleCounterHandler = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increment,\n        children: \"increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrement,\n        children: \"decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"gthwM6sqboLtlTmr2wLRFX51eJQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Counter;\nexport { Counter }; ///////////////////////////////////////////////////////////////////////\n\nclass Counters extends Component {\n  increment() {\n    this.props.increment();\n  }\n\n  decrement() {}\n\n  toggleCounterHandler() {}\n\n  render() {\n    const {\n      increment,\n      decrement,\n      toggleCounterHandler\n    } = this;\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.counter,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Redux Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.value,\n        children: counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: increment,\n          children: \"increment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: decrement,\n          children: \"decrement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleCounterHandler,\n        children: \"Toggle Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n} //get data from the\n\n\nconst mapStateToProps = state => {\n  return {\n    counter: state.counter\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    increment: () => dispatch({\n      type: \"increment\"\n    }),\n    decrement: () => dispatch({\n      type: \"decrement\"\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counters);\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/redux-sm-project/src/components/Counter.js"],"names":["Component","connect","useSelector","useDispatch","classes","Counter","dispatch","counter","state","increment","type","decrement","toggleCounterHandler","value","Counters","props","render","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport { connect } from \"react-redux\"; //for class component\n\n///////////////////////////////////////\nimport { useSelector, useDispatch } from \"react-redux\"; //for the functional components\nimport classes from \"./Counter.module.css\";\n\nconst Counter = () => {\n  //useDispatch give us the function baxk\n  const dispatch = useDispatch();\n  //take the data or state outside from the redux\n  const counter = useSelector((state) => state.counter);\n\n  const increment = () => {\n    dispatch({ type: \"increment\" });\n  };\n  const decrement = () => {\n    dispatch({ type: \"decrement\" });\n  };\n  const toggleCounterHandler = () => {};\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      <div className={classes.value}>{counter}</div>\n      <div>\n        <button onClick={increment}>increment</button>\n        <button onClick={decrement}>decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport { Counter };\n\n///////////////////////////////////////////////////////////////////////\n\nclass Counters extends Component {\n  increment() {\n    this.props.increment();\n  }\n  decrement() {}\n  toggleCounterHandler() {}\n  render() {\n    const { increment, decrement, toggleCounterHandler } = this;\n    return (\n      <main className={classes.counter}>\n        <h1>Redux Counter</h1>\n        <div className={classes.value}>{counter}</div>\n        <div>\n          <button onClick={increment}>increment</button>\n          <button onClick={decrement}>decrement</button>\n        </div>\n        <button onClick={toggleCounterHandler}>Toggle Counter</button>\n      </main>\n    );\n  }\n}\n//get data from the\nconst mapStateToProps = (state) => {\n  return {\n    counter: state.counter,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    increment: () => dispatch({ type: \"increment\" }),\n    decrement: () => dispatch({ type: \"decrement\" }),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Counters);\n"]},"metadata":{},"sourceType":"module"}